name: build-and-test-antioch
run-name: Building And Testing Antioch
on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
          name: "Windows Latest Release MinGW",
          os: windows-latest,
          build_type: "Release", cc: "gcc", cxx: "g++"
        }
        - {
          name: "Ubuntu Latest Release GCC",
          os: ubuntu-latest,
          build_type: "Release", cc: "gcc", cxx: "g++"
        }
        - {
          name: "Ubuntu Latest Debug GCC",
          os: ubuntu-latest,
          build_type: "Debug", cc: "gcc", cxx: "g++"
        }

    steps:
      - uses: actions/checkout@v3

      - uses: lukka/get-cmake@latest
    
      - name: Configure
        shell: cmake -P {0}
        run: |
          set(ENV{CC} ${{ matrix.config.cc }})
          set(ENV{CXX} ${{ matrix.config.cxx }})
        
          execute_process(
            COMMAND cmake
            -S .
            -B build
            -D CMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
            -G Ninja
          RESULT_VARIABLE result
          )
          if (NOT result EQUAL 0)
            message(FATAL_ERROR "Bad exit status")
          endif()

      - name: Build
        shell: cmake -P {0}
        run: |
          set(ENV{NINJA_STATUS} "[%f/%t %o/sec] ")
  
          execute_process(
            COMMAND cmake --build build
            RESULT_VARIABLE result
          )
          if (NOT result EQUAL 0)
            message(FATAL_ERROR "Bad exit status")
          endif()

      - name: Test
        shell: cmake -P {0}
        run: |
          include(ProcessorCount)
          ProcessorCount(N)

          execute_process(
            COMMAND ctest -j ${N}
            WORKING_DIRECTORY build
            RESULT_VARIABLE result
          )
          if (NOT result EQUAL 0)
            message(FATAL_ERROR "Running tests failed!")
          endif()